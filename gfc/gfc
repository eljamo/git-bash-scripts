#!/bin/bash

# Check if git is installed
if ! command -v git &> /dev/null; then
  echo "Error: git is not installed." >&2
  exit 1
fi

# Check if current directory is a git repository
if [ ! -d .git ] && ! git rev-parse --git-dir > /dev/null 2>&1; then
  echo "Error: Not a git repository." >&2
  exit 1
fi

# Fetch all branches and prune
git fetch --all --prune &> /dev/null

# Get list of local branches
LOCAL_BRANCHES=$(git branch --format="%(refname:short)")

# Get list of remote branches
REMOTE_BRANCHES=$(git branch -r | grep -v 'HEAD' | sed 's|^ *origin/||')

# Combine local and remote branches, removing duplicates
BRANCHES=$(echo -e "$LOCAL_BRANCHES\n$REMOTE_BRANCHES" | sort -u)

# Filter branches based on search terms
if [ -n "$1" ] || [ -n "$2" ]; then
  if [ -n "$1" ] && [ -n "$2" ]; then
    BRANCHES=$(echo "$BRANCHES" | grep -iE "$1|$2")
  elif [ -n "$1" ]; then
    BRANCHES=$(echo "$BRANCHES" | grep -i "$1")
  elif [ -n "$2" ]; then
    BRANCHES=$(echo "$BRANCHES" | grep -i "$2")
  fi
fi

# Check if branches were found
if [ -z "$BRANCHES" ]; then
  echo "No branches found." >&2
  exit 1
fi

echo "Please choose the branch you want to checkout:"

# Display branches in a select menu
select BRANCH in $BRANCHES; do
  if [ -n "$BRANCH" ]; then
    git checkout "$BRANCH"
    
    if [ $? -ne 0 ]; then
      echo "Error: Failed to checkout branch '$BRANCH'." >&2
      exit 1
    fi
    
    # Check if branch has a remote tracking branch
    TRACKING_BRANCH=$(git rev-parse --abbrev-ref --symbolic-full-name "$BRANCH@{u}" 2> /dev/null)
    if [ -n "$TRACKING_BRANCH" ]; then
      git pull
      if [ $? -ne 0 ]; then
        echo "Error: Failed to pull latest changes for branch '$BRANCH'." >&2
        exit 1
      fi
      echo "Successfully checked out and updated branch '$BRANCH'."
    else
      echo "Successfully checked out branch '$BRANCH', but no tracking branch to pull from."
    fi
    
    exit 0
  else
    echo "Invalid selection. Please try again."
  fi
done
